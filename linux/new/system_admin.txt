#####################Storage#################3
lsblk
fdisk -l
cfdisk
# c for charectere by carectere device . mouse keyboard
# b for bloc charectere device . storage
##############################################
######################Systemd##############
systemctl start servicename.service
systemctl stop servicename.service
systemctl status servicename.service

systemctl restart servicename.service
systemctl reload servicename.service

systemctl list-units --all


# User specifc service
~/.config/systemd/user/

#Add third party command to be managed by systemd
/etc/systemd/system/servicename.service
/run/systemd/system/servicename.service
/lib/systemd/system/servicename.service
systemctl edit servicename.service
systemctl show -p FragmentPath <service-name>.service
# reread all the units fils
systemctl daemon-reload

################## systemctl --user
Created symlink '/home/amir/.config/systemd/user/default.target.wants/ssh-agent.service' â†’ '/usr/lib/systemd/user/ssh-agent.service'.


systemctl poweroff
systemctl halt
systemctl reboot


systemctl try-restart service.service
systemctl reload-or-restart service.service
systemctl try-reload-or-restart service.service


systemctl enable service.service
systemctl reenable service.service
systemctl disable service.service



systemctl is-avtive service.service
systemctl is-enabled service.service

# list the enable it service and timer for the user service
systemctl list-unit-files --type=service --state=enabled
systemctl list-unit-files --type=timer --state=enabled

#
systemctl list-units --type=service --state=running

# unit file
[Unit]
Description=A brief description of the service
Documentation=URL or man page reference
After=network.target

[Service]
Type=simple
ExecStart=/usr/bin/your-service
ExecReload=/bin/kill -HUP $MAINPID
User=your-user
Group=your-group
Restart=on-failure

[Install]
WantedBy=multi-user.target

###
systemd useit to know if u enable the units when it shoud start when booting by specifying the directory 
unit for units info and when it should be run in the same directory level
service , how to start the service and reload it and the user , group that will run under



# example 
[Unit]
Description=Kanata Service
Requires=local-fs.target
After=local-fs.target

[Service]
ExecStartPre=/usr/bin/modprobe uinput
ExecStart=/usr/bin/kanata -c /etc/kanata/pocket3.kbd
Restart=no

[Install]
WantedBy=sysinit.target


[Unit]
Description=Kanata keyboard remapper
Documentation=https://github.com/jtroo/kanata

[Service]
Environment=PATH=/usr/local/bin:/usr/local/sbin:/usr/bin:/bin
Environment=DISPLAY=:0
Type=simple
ExecStart=/usr/bin/sh -c 'exec $$(which kanata) --cfg $${HOME}/.config/kanata/config.kbd'
Restart=no

[Install]
WantedBy=default.target




[Unit]
Description=Kanata keyboard remapper
Documentation=https://github.com/jtroo/kanata

[Service]
Type=simple
ExecStart=/usr/bin/kanata -q --cfg /home/amir/.config/kanata/config.kbd
Restart=no
User=root
Group=root

[Install]
WantedBy=multi-user.target


####################
[Unit]
Description=Change gnome wallpaper after 5 min

[Service]
ExecStart=%h/.dotfiles/scripts/random_wall.sh
Type=simple
Restart=on-failure

[Install]
WantedBy=default.target


###################'
# systemd timer

[Unit]
Description=Run My Custom Script Every 5 Minutes

[Timer]
OnUnitActiveSec=5m
OnBootSec=5m
Persistent=true

[Install]
WantedBy=timers.target
###############
[Unit]
Description=Change wallpaper

[Service]
ExecStart=%h/.local/bin/wallchange.sh
Type=simple

[Install]
WantedBy=default.target

#####################################################
######################Modules##################
# module in linux is simular to driver in windows . which tell the kernel how to manage or control a device
# /lib/modules/
# /etc/modules-load.d/
# prevent module to load when booting
# /etc/modprobe.d/blacklist.conf
# add the line "blacklist module_name"
# update-initramfs -u
# list loaded modules
lsmod
# manage module add or delete
# load a specifc module
modprobe module_name
# unload a module
modprobe -r module_name
# info module
modinfo module_name
# manuly # it s safer to use modprobe because it take in consideration the dependencies of the module u want to run
insmod module_name
rmmod module_name
##################################################
#########################logs####################
# /var/log  by default all the login of the host are saved here

# /etc/logrotate.conf  to configure the rate of archive the log and auto clean the old one

tail -f /var/log/service.log # real time loging

# sudo nano /etc/rsyslog.conf in debian base system

journalctl -xe
journalctl -u servince_name.service
# the systemd-journald.service is the service responble of loging 
#################################################
###################keyboard layout###############
localctl status
localctl set-keymap us
localctl set-x11-keymap us
############################################
##################################at############3
# at Command Cheat Sheet for Linux

## Basic Usage
1. Schedule a command to run at a specific time:
   at <time>
   Example:
   at 14:30

2. Run a command at a specific time:
   echo "command" | at <time>
   Example:
   echo "ls -l > output.txt" | at 15:00

3. Run a script at a specific time:
   at <time> -f /path/to/script.sh
   Example:
   at 16:00 -f /home/user/myscript.sh

## Time Formats
- Absolute Time:
  - HH:MM (e.g., 14:30 for 2:30 PM)
  - midnight, noon, teatime (4 PM)
  - MMDDYY, MM/DD/YY, DD.MM.YY (e.g., 102523 for October 25, 2023)

- Relative Time:
  - now + X minutes/hours/days/weeks (e.g., now + 2 hours)
  - tomorrow (same time tomorrow)

## Common Options
- List scheduled jobs:
  atq
  or
  at -l

- Remove a scheduled job:
  atrm <job_id>
  Example:
  atrm 5

- View the contents of a scheduled job:
  at -c <job_id>

- Run a job in a specific queue:
  at -q <queue> <time>
  (Queues are letters a-z, with higher letters having lower priority.)

## Examples
1. Schedule a job to run at 10 PM:
   at 22:00

2. Schedule a job to run in 2 hours:
   at now + 2 hours

3. Schedule a job to run tomorrow at 8 AM:
   at 8:00 tomorrow

4. Schedule a job to run on October 31, 2023, at 9 PM:
   at 9:00 PM 103123

5. List all scheduled jobs:
   atq

6. Delete a job with ID 3:
   atrm 3

## Notes
- The `at` command relies on the `atd` service. Ensure it is running:
  sudo systemctl status atd

- Jobs are executed in the user's environment, so environment variables and paths are preserved.
###############################################
